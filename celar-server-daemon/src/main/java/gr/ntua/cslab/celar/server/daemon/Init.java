package gr.ntua.cslab.celar.server.daemon;

import gr.ntua.cslab.database.DBConnectable;
import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.Properties;

/**
 *
 * @author cmantas
 */
public class Init {
     final static String PROPERTIES_FILE = "/celar-server.properties";
     final static String LOADER_FILE = "/opt/celar/celar-server/conf/load_autogenerated.py";
    public static void main(String args[]){
    Properties prop = new Properties();

        try {
            InputStream in = Init.class.getResourceAsStream(PROPERTIES_FILE);
            // load a properties file
            prop.load(in);

            // get the property value 
            String iaas = prop.getProperty("iaas");
            String token = prop.getProperty(iaas + ".token");
            System.out.println("TOKEN:"+ token);
            
            Process process = new ProcessBuilder("/usr/bin/python",LOADER_FILE, iaas, DBConnectable.getHost()).start();
            InputStream is = process.getInputStream();
            InputStreamReader isr = new InputStreamReader(is);
            BufferedReader br = new BufferedReader(isr);
            String line;

            System.out.println("Output of running external app: ");

            while ((line = br.readLine()) != null) {
              System.out.println(line);
            }
            br.close();
            
            is = process.getErrorStream();
            isr = new InputStreamReader(is);
            br = new BufferedReader(isr);
            System.out.println("ERROR output of running external app: ");
            while ((line = br.readLine()) != null) {
              System.out.println(line);
            }
            br.close();
            System.out.println("DONE init");
        } catch (Exception e){
            e.printStackTrace();
        } 
    }
}
