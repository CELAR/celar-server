#!/bin/bash
### BEGIN INIT INFO
# Provides:
# Required-Start:
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start celar server
# Description:       To start-stop celar cerver
### END INIT INFO

# This is the init script for the CELAR Server daemon.
# When deployed, it should be placed under /etc/init.d/
# to be executed as a service.

[ -z "$CELAR_SERVER_HOME" ] && CELAR_SERVER_HOME="/opt/celar/celar-server"

LIB_DIR=$CELAR_SERVER_HOME/lib
CONF_DIR=$CELAR_SERVER_HOME/conf


CLASSPATH=$CONF_DIR
CLASSPATH=$CLASSPATH:$(echo $LIB_DIR/*.jar | tr ' ' ':')
CLASSPATH=$CLASSPATH:$CELAR_SERVER_HOME/celar-server.jar
PIDFILE=/tmp/celar-server.pid


init() {
    pip install kamaki &>/dev/null
    pip install psycopg2 &>/dev/null
    java -Dname=celar-server -cp $CLASSPATH  gr.ntua.cslab.celar.server.daemon.Init &
}

start() {
    echo Starting the Celar Server
    [ -f $PIDFILE ] && echo "CELAR Server already running ($(cat $PIDFILE))" && exit 0
    java -Dname=celar-server -cp $CLASSPATH  gr.ntua.cslab.celar.server.daemon.Main &
    echo $! > $PIDFILE;
    #check if celar db exists and if not init
    test=$(echo "SELECT * FROM RESOURCE_TYPE" | psql -U celaruser celardb | wc -l)
    if [ "$test" = "4" ]; 
    then  
            echo "Will need to init the Database"
            init;
    fi
}

stop() {
    PID=$(cat $PIDFILE 2>/dev/null)
    [ "$PID" == "" ] && echo "CELAR Server not running" && exit 0
    kill -TERM $PID
    rm -f $PIDFILE 
}

status() {
    if [ -f $PIDFILE ]; then
        PID=$(cat $PIDFILE)
        echo "CELAR Server running ($PID)"
    else
        echo "CELAR Server not running"
    fi
}

case $1 in
    start)
        start;
    ;;
    stop)   
        stop;
    ;;
    restart)    
        stop && start;
    ;;
    status)   
        status;
    ;;
    init)   
        init;
    ;;
    *)      
        echo "$0 {start|stop|status|restart}"
    ;;
esac
